[buildout]
parts =
    productdistros

    instance1
    instance2

    nginx-build

    frontend

    supervisor

    zopepy

    logrotate.conf

# Change the number here to change the version of Plone being used
extends = 
    http://download.zope.org/Zope2/index/2.12.3/versions.cfg
    http://dist.plone.org/release/4.0/versions.cfg

    config/supervisor.cfg
    config/nginx-build.cfg
    config/logrotate.cfg

versions = versions


# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.0
    http://dist.plone.org/thirdparty

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =
    src/collective.blogging

[users]
frontend = worker
cache = worker
balancer = worker
zope = worker
supervisor = worker

[hosts]
frontend-ip = 127.0.0.1
frontend-hostname = localhost
supervisor = localhost

[ports]
frontend = 80
instance1 = 8080
instance2 = 8081
supervisor = 8701


[pd-settings]
rel-storage-pgsql-dsn = dsn dbname='plonedemo' user='plonedemo' host='localhost' password='password'

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.
[productdistros]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.distros
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[instance1]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/plone.recipe.zope2instance
recipe = plone.recipe.zope2instance
user = admin:admin
# $$ means what?
http-address = ${ports:instance1}
effective-user = ${users:zope}
debug-mode = off
#verbose-security = on
#blob-storage = var/blobstorage
# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = Plone my.package
rel-storage = 
    type postgresql
    ${pd-settings:rel-storage-pgsql-dsn}
    blob-dir ${buildout:directory}/var/blobstorage

eggs =
    Zope2
    Plone
    PIL
    RelStorage
    psycopg2 == 2.2.2
    collective.blogging
    quintagroup.portlet.cumulus

environment-vars =
    zope_i18n_compile_mo_files = true

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    quintagroup.portlet.cumulus

products =
    ${buildout:directory}/products
    ${productdistros:location}

[instance2]
<= instance1
http-address = ${ports:instance2}

[zopepy]
# For more information on this step and configuration options see:
# http://pypi.python.org/pypi/zc.recipe.egg
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

#############################################################
# the front end web server setting
#############################################################
[frontend]
recipe = gocept.nginx
nginx = nginx-build
configuration = 
    user ${users:frontend};
    error_log ${buildout:directory}/var/log/frontend-error.log debug;
    worker_processes 1;
    daemon off;
    events {
        worker_connections 1024;
    }

    http {
        upstream zope {
            server localhost:${ports:instance1} max_fails=3 fail_timeout=30s;
            server localhost:${ports:instance2} max_fails=3 fail_timeout=30s;
        } 

        server {
            listen ${hosts:frontend-ip}:80;
            server_name ${hosts:frontend-hostname}; 
            access_log ${buildout:directory}/var/log/frontend-access.log;

            # rules to redirect the reversed ids for root level Plone site:
            rewrite (.+)/(pd-.+)$ http://$host:$http_port/$2/ last;
            rewrite (.+)/(pd-.+)/$ http://$host:$http_port/$2/ last;

            # rules to redirect the reversed ids for root level Zope folders:
            rewrite /sandbox$ http://$host:$http_port/pd-admin/ last;
            rewrite /sandbox/$ http://$host:$http_port/pd-admin/ last;

            # rule for plone sites in sandbox folder
            rewrite ^/sandbox/(.*) /VirtualHostBase/http/$host:$http_port/VirtualHostRoot/sandbox/$1 last;

            # rule for plone sites in root folder
            rewrite ^/([^/]+)/(.*) /VirtualHostBase/http/$host:$http_port/VirtualHostRoot/$1/$2 last;
            # This rule will add a '/' at the end, so the previous rule could take over. 
            rewrite ^/([^/]+) http://$host:$http_port/$1/ last;  

            # redirect to homepage
            rewrite / http://$host:$http_port/pd-admin/ permanent;

            location / {
                proxy_pass http://zope;
            }
        }
    }
